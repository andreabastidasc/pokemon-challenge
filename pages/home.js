/* eslint-disable react/prop-types */
import Head from 'next/head'
import styles from '../styles/Home.module.scss'
import React, { useState, useEffect } from 'react'
import pokemonService from '../services/pokemon'
import { CardCustom } from '../components/CardCustom'
import { Row, Container, Button } from 'react-bootstrap'
import { signOut, useSession } from 'next-auth/client'
import { useRouter } from 'next/router'

export default function Home ({ pokemonList }) {
  const [session] = useSession()
  const router = useRouter()
  const [nombrePokemon, setNombrePokemon] = useState([])

  useEffect(() => {
    setNombrePokemon(pokemonList)
  }, [pokemonList])

  useEffect(() => {
    if (!session) {
      router.push('/')
    }
  }, [router, session])

  function changeContentOver () {
    document.getElementById('signout-button').innerHTML = ' '
  }

  function changeContentOut () {
    document.getElementById('signout-button').innerHTML = 'Sign Out'
  }

  return (
    <Container fluid className={`${styles.container} ${styles.home}`}>
      <Head>
        <title>Pokemon Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className={styles['home-header']}>
        <img className={styles['home-logo']} src="assets/img/PokeLogo.png" alt="PokÃ©mon logo"/>
        <Button id='signout-button' className={styles['home-signout-button']} onMouseOut={() => changeContentOut()} onMouseOver={() => changeContentOver()} onClick={() => signOut()}>Sign Out</Button>
      </header>
      <main className='container pt-5 pb-5'>
       <Row className="justify-content-center mt-5">
        {
         nombrePokemon.map((pokemon, index) => (
             <CardCustom pokemon={pokemon} key={index}/>
         ))
        }
        </Row>
      </main>
    </Container>
  )
}

export async function getStaticProps () {
  let pokemonList = null
  const getPokemones = async () => {
    try {
      const { results } = await pokemonService.getPokemones()
      console.log(results)
      return results
    } catch (error) {
      console.log('error', error)
    }
  }
  pokemonList = await getPokemones()
  return {
    props: {
      pokemonList
    }
  }
}
